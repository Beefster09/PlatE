Up next:
[ ] Level data (basic)
  [X] Data structures
  [X] Bake JSON
  [X] Read in
  [ ] Rendering and collision of level data
[ ] Slope following
  [ ] Contact normal/tangent
  [ ] Falling off ledges/handing off to adjacent slopes
[ ] Virtual controller
  [ ] Data Structures
  [ ] Detailed state
  [ ] Configuration
[ ] Asset manager
  [ ] Keep track of what is loaded and prevent double-loading
  [ ] Quasi-GC
    [ ] When to run?
    [ ] Analyze dependency/reachability
    [ ] Unload unused assets
[ ] Scripting

High-Level 1.0 Features
[ ] Fast collision detection
  [X] Rectangle, Line, Circle Collision types
    [ ] Optimize
  [ ] Tunnelling prevention (ccd)
  [ ] Raycasting
  [ ] Spacial indexing for level collision data
  [ ] Entity offscreen culling
  [X] Gravity
  [ ] Slopes
  [ ] Moving Platforms, conveyor belts?
  [ ] High-level checks
    [ ] On ground / in air
    [ ] Touching wall
[ ] Data-oriented sprite/entity framework (Similar to a particle system)
  [ ] Parallel processing
[ ] Particle system for effects
  [ ] Textured particles (for sparkles, smoke, etc...)
  [ ] Collision? (maybe environment only)
[ ] Event system
[ ] JSON and binary assets
  [ ] Baking JSON assets into binary assets (external tool)
[ ] Resolution independence
[ ] GUI framework
[ ] Automatic asset management (quasi-GC on Sprites, EntityClasses, etc...)
[ ] Console commands
[ ] Scripting - probably AngelScript
  [ ] Thread-safe
    [ ] Per-frame entities updates limit scope to ONLY the currently processed entity
    [ ] Event updates allow access to all entities involved
  [ ] Saving system that is easy to use and implement.
    [ ] Persistent data stores at both global scope and map scope.
    [ ] Forwards-compatible data structure (probably a hash table)
[ ] Controller subsystem
  [ ] Virtual controller / mappings
  [ ] Up/Down/Hold/Press/Release/Trigger polling (perhaps as time since last X)
  [ ] Press/Release/Trigger events
  [ ] Input history with pattern matching (fightstick type stuff)
  [ ] Configuration
[ ] Basic editor (probably in a different language)